name: Measure packages size

on:
  workflow_dispatch:
    inputs:
      prNumber:
        description: "PR Number"
        required: true

permissions:
  contents: read

jobs:
  measure-utils-sizes:
    permissions:
        pull-requests: write
    runs-on: ubuntu-latest
    env:
      NODE_ENV: dev
      PR_NUMBER: ${{ inputs.prNumber }}
    steps:
      # Since we are manually triggering the workflow the previous checkout has the main branch. In order to checkout the branch/code of the PR
      # we need first to use the PR number to retrieve the PR SHA number. This means we need three steps to: checkout the repo,
      # run a custom script to get the SHA, and then finally checkout the PR branch
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          egress-policy: audit

      - name: Checkout Repo
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v3.5.2
      - name: Extract PR details
        id: extract_PR_details
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
            const script = require('.github/scripts/get_pr_info.js');
            await script({github, context, core});
      - name: Checkout PR code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v3.5.2
        with:
          ref: ${{ steps.extract_PR_details.outputs.headSHA }}
      - name: Packages size report
        uses: flochaz/pkg-size-action@1f56793682d897eb0860d98637fa4ea8fe7d37b8 # v.2.0.1
        with:
          build-command: mkdir dist && npm run package -w packages/logger -w packages/tracer -w packages/metrics -w packages/commons -w packages/parameters && npm run package-bundle -w packages/logger -w packages/tracer -w packages/metrics -w packages/commons -w packages/parameters && bash -c "mv ./packages/*/dist/* dist/" && ls dist
          dist-directory: /dist
          pr-number: ${{ inputs.prNumber }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
